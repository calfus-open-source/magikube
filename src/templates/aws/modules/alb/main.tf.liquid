resource "aws_lb" "alb" {
  name               = "${var.name}-${var.environment}-alb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [var.ingress_security_group_id]
  subnets            = var.vpc_public_subnets
  enable_deletion_protection = false
}

resource "aws_lb_listener" "alb_listnener_http" {
  load_balancer_arn = aws_lb.alb.arn
  port              = "80"
  protocol          = "HTTP"

  default_action {
    type = "redirect"

    redirect {
      port        = "443"
      protocol    = "HTTPS"
      status_code = "HTTP_301"
    }
  }
}

resource "aws_lb_listener" "alb_listener_https" {
  load_balancer_arn = aws_lb.alb.arn
  port              = "443"
  protocol          = "HTTPS"
  ssl_policy        = "ELBSecurityPolicy-TLS-1-2-2017-01" # Updated to the latest security policy
  certificate_arn   = var.aws_acm_certificate_arn

  default_action {
    type = "fixed-response"
    fixed_response {
      content_type = "text/plain"
      message_body = "404 Not Found"
      status_code  = "404"
    }
  }
}

output "ingress_alb_dns_name" {
  value = aws_lb.alb.dns_name
}

resource "aws_route53_record" "argocd-cname" {
  zone_id = var.route53_zoneid
  name    = "argocd.${var.domain_name}"
  type    = "CNAME"
  ttl     = 300
  records = [aws_lb.alb.dns_name]
}

resource "aws_route53_record" "app-alias" {
  zone_id = var.route53_zoneid
  name    = "${var.domain_name}"
  type    = "A"

  alias {
    name                   = aws_lb.alb.dns_name
    zone_id                = aws_lb.alb.zone_id
    evaluate_target_health = true
  }
}

output "aws_lb_arn" {
  value = aws_lb.alb.arn
}
