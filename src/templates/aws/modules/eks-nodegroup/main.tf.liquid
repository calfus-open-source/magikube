data "aws_availability_zones" "available" {}

data "aws_iam_group" "devops" {
  group_name = "${ var.name }-devops"
}

locals {
  azs      = slice(data.aws_availability_zones.available.names, 0, {{ aws_az_count }})
}

resource "aws_kms_key" "eks_kms" {
  description = "${ var.name }-${ var.environment }-eks-key"
}

module "eks" {
  source  = "terraform-aws-modules/eks/aws"
  version = "{{ aws_eks_module_version }}"
  
  cluster_name       = "${var.name}-${var.environment}-eks"
  cluster_version    = var.cluster_version
  cluster_encryption_config = {
    "resources": [
      "secrets"
    ]
  node_group_name    = "${var.name}-node-group"
  }
  kms_key_owners = data.aws_iam_group.devops.users[*].arn
  enable_cluster_creator_admin_permissions = true
  dataplane_wait_duration = "0s"

  authentication_mode = "API"
  cluster_endpoint_public_access  = true

  cluster_addons = {
    coredns = {
      most_recent = true
    }
    kube-proxy = {
      most_recent = true
    }
    vpc-cni = {
      most_recent = true
    }
  }

  subnet_ids               = var.vpc_private_subnets
  vpc_id                   = var.vpc_id
  eks_managed_node_groups = {
    eks_node_group = {
      name             = "${var.name}-ng"
      desired_capacity = "{{ node_desired_size }}"
      max_capacity     = "{{ node_max_size }}"
      min_capacity     = "{{ node_min_size }}"
      instance_type    = "{{ node_instance_type }}"
      capacity_type     = "ON_DEMAND"
      disk_size         = "{{ ebs_volume_size }}"
    }
  }
  tags = {
    Name             = "${var.name}-${var.environment}-eks"
    "product"        = var.name
    "environment"    = var.environment
    "role"           = "eks"
    "terraform"      = "true"
  }
}

#store these keys in secrets manager
resource "aws_secretsmanager_secret" "k8s_secret" {
  name = "${ var.name }-${ var.environment }-eks-secrets"
  description = "Kubernetes related authentication details"
  recovery_window_in_days = 0
  tags = {
    "product"        = var.name
    "environment"    = var.environment
    "terraform"      = "true"
  }
}

resource "aws_secretsmanager_secret_version" "k8s_secret_version" {
  secret_id     = aws_secretsmanager_secret.k8s_secret.id
  secret_string = jsonencode({
    cluster_name = module.eks.cluster_name,
    cluster_endpoint = module.eks.cluster_endpoint,
    cluster_certificate_authority_data = module.eks.cluster_certificate_authority_data
    cluster_oidc_issuer_url = module.eks.cluster_oidc_issuer_url
    oidc_provider = module.eks.oidc_provider
    oidc_provider_arn = module.eks.oidc_provider_arn
  })
}

output "cluster_name" {
  value = module.eks.cluster_name
}

output "cluster_endpoint" {
  value = module.eks.cluster_endpoint
}

output "cluster_certificate_authority_data" {
  value = module.eks.cluster_certificate_authority_data
}

output "cluster_oidc_issuer_url" {
  value = module.eks.cluster_oidc_issuer_url
}

output "oidc_provider" {
  value = module.eks.oidc_provider
}

output "oidc_provider_arn" {
  value = module.eks.oidc_provider_arn
}
output "eks_managed_node_groups" {
  value = module.eks.eks_managed_node_groups
}

