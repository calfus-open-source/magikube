data "aws_availability_zones" "available" {}

locals {
  azs      = slice(data.aws_availability_zones.available.names, 0, {{ aws_az_count }})
}

provider "kubernetes" {
  host                   = var.cluster_endpoint
  cluster_ca_certificate = base64decode(var.cluster_certificate_authority_data)
  token                  = var.cluster_token
}

provider "helm" {
  kubernetes {
    host                   = var.cluster_endpoint
    cluster_ca_certificate = base64decode(var.cluster_certificate_authority_data)
    token                  = var.cluster_token
  }
}

data "http" "iam_policy_for_ingress_controller" {
  url = "https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json"
}

resource "aws_iam_role" "aws-load-balancer-controller-role" {
  name = "${var.name}-aws-load-balancer-controller-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = "sts:AssumeRoleWithWebIdentity",
        Effect = "Allow",
        Principal = {
          Federated: "${var.oidc_provider_arn}"
        },
        Condition: {
            StringEquals: {
                "${var.oidc_provider}:aud": "sts.amazonaws.com",
                "${var.oidc_provider}:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller"
            }
        }
      },
    ],
  })

  tags = {
    "product"        = var.name
    "role"           = "networking"
    "terraform"      = "true"    
  }
}

resource "aws_iam_policy" "aws-load-balancer-controller-iam-policy" {
  name        = "${var.name}-aws-load-balancer-controller-iam-policy"
  description = "Load balancer controller policy"
  policy      = data.http.iam_policy_for_ingress_controller.response_body
  tags = {
    "product"        = var.name
    "role"           = "networking"
    "terraform"      = "true"    
  }
}

resource "aws_iam_role_policy_attachment" "aws-load-balancer-controller-policy-attach" {
  policy_arn = aws_iam_policy.aws-load-balancer-controller-iam-policy.arn
  role       = aws_iam_role.aws-load-balancer-controller-role.name
}

resource "kubernetes_service_account" "aws-load-balancer-controller-service-account" {
    metadata {
      labels = {
        "app.kubernetes.io/component" = "controller",
        "app.kubernetes.io/name" = "aws-load-balancer-controller"
      }
      namespace = "kube-system"
      name = "aws-load-balancer-controller"
      annotations = {
        "eks.amazonaws.com/role-arn" = "${aws_iam_role.aws-load-balancer-controller-role.arn}"
      }
    }
    depends_on = [ var.fargate_profiles ]
}

resource "helm_release" "ingress" {
  name       = "ingress"
  chart      = "aws-load-balancer-controller"
  repository = "https://aws.github.io/eks-charts"
  version    = "{{ aws_load_balancer_controller_version }}"
  namespace  = "kube-system"

  set {
    name  = "clusterName"
    value = "${var.cluster_name}"
  }
  set {
    name  = "serviceAccount.create"
    value = "false"
  }
  set {
    name  = "region"
    value = "${var.region}"
  }
  set {
    name  = "vpcId"
    value = "${var.vpc_id}"
  }
  set {
    name  = "serviceAccount.name"
    value = "aws-load-balancer-controller"
  }
  depends_on = [ var.fargate_profiles ]
}
