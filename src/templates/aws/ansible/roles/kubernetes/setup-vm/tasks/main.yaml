
# ---
# - name: Update package cache
#   apt:
#     update_cache: yes

# - name: Upgrade to latest version of packages
#   apt:
#     name: "*"
#     state: latest

# - name: Install pre-requisites
#   apt:
#     pkg:
#       - apt-transport-https
#       - ca-certificates
#       - curl
#       - gnupg2
#       - lsb-release 
#       - ntp
#       - ntpdate
#       - software-properties-common
#       - watch
#       - ipvsadm
#       - ipset
#       - tcpdump     
#       - firewalld     
#       - acl     
#       - net-tools     
#       - awscli
#       - jq
#       - python3-pip
#     state: latest
#     update_cache: true

# - name: Install multi python packages
#   ansible.builtin.pip:
#     name:
#       - boto
#       - boto3

# - name: Install Nginx
#   apt:
#     name: nginx
#     state: present
#     update_cache: yes

# - name: Start Nginx service
#   systemd:
#     name: nginx
#     state: started
#     enabled: yes

# - name: Check the uptime prior reboot
#   shell: uptime
#   register: UPTIME_PRE_REBOOT

# - name: debug output
#   ansible.builtin.debug: 
#     msg: "Uptime Before Reboot: {{UPTIME_PRE_REBOOT.stdout}}"

# - name: Reboot node and stop polling
#   shell: reboot
#   async: 10 # Do not care for 10 sec
#   poll: 0 # Fire & Forget
#   when: not ansible_check_mode

# - name: Wait for connection (600s default)
#   ansible.builtin.wait_for_connection:

# - name: Check the uptime post reboot
#   shell: uptime
#   register: UPTIME_POST_REBOOT

# - name: debug output
#   ansible.builtin.debug: 
#     msg: "Uptime After Reboot: {{UPTIME_POST_REBOOT.stdout}}"

---
- name: Update package cache
  apt:
    update_cache: yes

- name: Upgrade to latest version of packages
  apt:
    name: "*"
    state: latest

- name: Install pre-requisites
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - lsb-release 
      - ntp
      - ntpdate
      - software-properties-common
      - watch
      - ipvsadm
      - ipset
      - tcpdump     
      - firewalld     
      - acl     
      - net-tools     
      - awscli
      - jq
      - python3-pip
    state: latest
    update_cache: true

- name: Install Docker
  apt:
    name: docker.io
    state: latest

- name: Start Docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Add user to Docker group
  user:
    name: "{{ ansible_user }}"
    group: docker
    append: yes

- name: Install multi python packages
  ansible.builtin.pip:
    name:
      - boto
      - boto3

- name: Install Nginx
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Start Nginx service
  systemd:
    name: nginx
    state: started
    enabled: yes

- name: Check the uptime prior reboot
  shell: uptime
  register: UPTIME_PRE_REBOOT

- name: Debug output for uptime before reboot
  ansible.builtin.debug: 
    msg: "Uptime Before Reboot: {{UPTIME_PRE_REBOOT.stdout}}"

- name: Reboot node and stop polling
  shell: reboot
  async: 10 # Do not care for 10 sec
  poll: 0 # Fire & Forget
  when: not ansible_check_mode

- name: Wait for connection (600s default)
  ansible.builtin.wait_for_connection:

- name: Check the uptime post reboot
  shell: uptime
  register: UPTIME_POST_REBOOT

- name: Debug output for uptime after reboot
  ansible.builtin.debug: 
    msg: "Uptime After Reboot: {{UPTIME_POST_REBOOT.stdout}}"
