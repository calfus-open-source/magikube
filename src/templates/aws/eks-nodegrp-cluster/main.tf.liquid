{% comment "Following can not be replaced with terraform variables and it requires to be defined upfront" %}{% endcomment %}
provider "aws" {
    region     = "{{ aws_region}}"
}

terraform {
     backend "s3" {
     }
 }

module "vpc" {
    source = "./modules/vpc"
    name = "${ var.project_name }-${ var.environment }-vpc"
    environment = "${ var.environment }"
    cidr = "${ var.vpc_cidr }"
}

module "eks" {
    source                  = "./modules/eks-nodegrp-cluster"
    name                    = "${ var.project_name }"
    environment             = "${ var.environment }"
    vpc_id                  = module.vpc.id
    vpc_private_subnets     = module.vpc.private_subnets
    cluster_version         = "${ var.cluster_version }"
}

module "route53" {
    source = "./modules/route53"
    name = "${ var.project_name }"
    environment = "${ var.environment }"
    domain_name = coalesce(var.domain_name, replace(module.eks.cluster_endpoint, "https://", ""))
}

{% comment %} {% if domain %}
module "acm" {
    source = "./modules/acm"
    name = "${ var.project_name }"
    environment = "${ var.environment }"
    domain_name = coalesce(var.domain_name, module.eks.cluster_endpoint)
    route53_zoneid = module.route53.zone_id
} 
{% endif %}
{% endcomment %}

{% if source_code_repository == 'github' %}
module "gitops" {
    source = "./modules/gitops"
    name = "${ var.project_name }"
    environment = "${ var.environment }"
    github_token = "${ var.github_access_token }"
    github_owner = "${ var.github_owner }"
}
{% endif %}

{% if source_code_repository == 'codecommit' %}
module "gitops" {
    source = "./modules/gitops"
    name = "${ var.project_name }"
    environment = "${ var.environment }"
}
{% endif %}

data "aws_eks_cluster_auth" "eks_cluster_auth" {
    name = module.eks.cluster_name
}
  
module "ingress-controller" {
    source                   = "./modules/ingress-controller"
    name                     = "${ var.project_name }"
    environment              = "${ var.environment }"
    region                   = "${ var.region }"
    cluster_endpoint         = module.eks.cluster_endpoint
    cluster_certificate_authority_data = module.eks.cluster_certificate_authority_data
    cluster_name             = module.eks.cluster_name
    vpc_id                   = module.vpc.id
    vpc_private_subnets      = module.vpc.private_subnets
    vpc_public_subnets       = module.vpc.public_subnets
    oidc_provider_arn        = module.eks.oidc_provider_arn
    oidc_provider            = module.eks.oidc_provider
    cluster_token            = data.aws_eks_cluster_auth.eks_cluster_auth.token
    cluster_node_group_name  = module.eks.eks_managed_node_groups
}
