provider "aws" {
  region     = "{{ aws_region }}"
}

terraform {
  backend "s3" {
      bucket  = "{{ project_id }}-tfstate"
      encrypt = true
      key     = "{{ project_name }}-{{ environment }}.tfstate"
      region  = "{{ aws_region }}"
      dynamodb_table = "{{ project_id }}-tfstate-lock"
  }
}

module "vpc" {
  source = "./modules/vpc"
  name = "{{ project_name }}-{{ environment }}-vpc"
  environment = "{{ environment }}"
  cidr = "{{ aws_vpc_cidr }}"
}

module "ssh-key" {
  source          = "./modules/ssh-key"
  ssh_key_name    = "{{ project_name }}-key"
  env_files_bucket_name = "{{ project_name }}-bucket"
}

module "bastion" {
  source                     = "./modules/bastion"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  vpc_public_subnets         = module.vpc.public_subnets[0]
  name                       = "{{ project_name }}-{{ environment }}-bastion"
}

module "master" {
  source                     = "./modules/master"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  name                       = "{{ project_name }}-{{ environment }}-master"
}

module "worker" {
  source                     = "./modules/worker"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  name                       = "{{ project_name }}-{{ environment }}-worker"
}
