provider "aws" {
  region     = "{{ aws_region }}"
}

terraform {
  backend "s3" {
      bucket  = "{{ project_id }}-tfstate"
      encrypt = true
      key     = "{{ project_name }}-{{ environment }}.tfstate"
      region  = "{{ aws_region }}"
      dynamodb_table = "{{ project_id }}-tfstate-lock"
  }
}

module "vpc" {
  source = "./modules/vpc"
  name = "{{ project_name }}-{{ environment }}-vpc"
  environment = "{{ environment }}"
  cidr = "{{ aws_vpc_cidr }}"
}

module "ssh-key" {
  source          = "./modules/ssh-key"
  ssh_key_name    = "{{ project_name }}-{{ environment }}-key"
  env_files_bucket_name = "{{ project_name }}-{{ environment }}-bucket"
}

module "bastion" {
  source                     = "./modules/bastion"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  vpc_public_subnets         = module.vpc.public_subnets[0]
  name                       = "{{ project_name }}-{{ environment }}-bastion"
}

module "master" {
  source                     = "./modules/master"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  name                       = "{{ project_name }}-{{ environment }}-master"
}

module "worker" {
  source                     = "./modules/worker"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  name                       = "{{ project_name }}-{{ environment }}-worker"
}


locals {
  rendered_template = templatefile("./ssh-config.tftpl", {
    project_name = "{{ project_name }}"
    environment  = "{{ environment }}"
    bastion_ips   = module.bastion.k8s-bastion-ips
    master_ips    = module.master.k8s-master-ips
    worker_ips   = module.worker.k8s-worker-ips
  })
}

  resource "null_resource" "ssh_config" {
    provisioner "local-exec" {
      command = "echo '${local.rendered_template}' >> ~/.ssh/config"
    }
  }

output "master_ip" {
  value = module.master.k8s-master-ips[0]
}
  
output "vpc_id" {
  value = module.vpc.id
}

output "vpc_public_subnets" {
  value = module.vpc.public_subnets
}

output "vpc_private_subnets" {
  value = module.vpc.private_subnets
}

{% comment %} {% if source_code_repository == 'github' %}
  module "gitops" {
      source = "./modules/gitops"
      name = "${ var.project_name }"
      environment = "${ var.environment }"
      github_token = "${ var.github_access_token }"
      github_owner = "${ github_owner }"
  }
  {% endif %} {% endcomment %}
