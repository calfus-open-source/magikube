# Terraform script to add gitops user in github and create a repository for gitops in github
# Compare this snippet from magikube/sample/modules/gitops/main.tf:

provider "github" {
  token = var.github_token
  owner = var.github_owner
}

data "github_user" "current_user" {
  username = ""
}

resource "github_team" "gitops_team" {
  name        = "${var.name}-${var.environment}-gitops"
  description = "Git Ops team for ${var.name}, Environment: ${var.environment}"
}

resource "github_team_membership" "gitops_team_membership" {
  team_id  = github_team.gitops_team.id
  username = data.github_user.current_user.login
  role     = "maintainer"
}

resource "github_team_repository" "gitops_team_repository" {
  team_id    = github_team.gitops_team.id
  repository = github_repository.gitops_repository.name
  permission = "admin"
}

resource "github_repository" "gitops_repository" {
  name        = "${var.name}-${var.environment}-gitops"
  description = "Git Ops repository for ${var.name}, Environment: ${var.environment}"
  visibility  = "private"
  has_issues  = false
  has_projects = false
  has_wiki    = false
  auto_init   = false
  topics = ["gitops", "terraform", "cicd"]
}

resource "tls_private_key" "gitops_ssh_key" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "github_repository_deploy_key" "gitops_deploy_key" {
  repository = github_repository.gitops_repository.name
  title      = "GitOps Deploy Key"
  key        = tls_private_key.gitops_ssh_key.public_key_openssh
  read_only  = false
}
output "gitops_repository_url" {
  value = github_repository.gitops_repository.html_url
}

output "gitops_repository_clone_url" {
  value = github_repository.gitops_repository.git_clone_url
}

output "gitops_ssh_private_key" {
  value = tls_private_key.gitops_ssh_key.private_key_pem
}

output "gitops_ssh_public_key" {
  value = tls_private_key.gitops_ssh_key.public_key_openssh
}

output "gitops_deploy_key_id" {
  value = github_repository_deploy_key.gitops_deploy_key.id
}

output "gitops_ssh_clone_url" {
  value = github_repository.gitops_repository.ssh_clone_url
}

output "gitops_https_clone_url" {
  value = github_repository.gitops_repository.http_clone_url
}
